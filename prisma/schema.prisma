generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  phone     String
  studentId String?  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cpf       String   @unique
  role      Int      @default(0)
  Order     Order[]
}

model Event {
  id          String   @id @default(cuid())
  name        String
  date        String
  time        String
  location    String
  description String?
  image       String
  link        String?
  active      Boolean
  Batch       Batch[]
}

model Batch {
  id               Int      @id @default(autoincrement())
  name             String
  availableTickets Int
  active           Boolean
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  eventId          String?
  Event            Event?   @relation(fields: [eventId], references: [id], onDelete: Cascade)
  Tickets          Ticket[]
}

model Ticket {
  id             String   @id @default(cuid())
  batchId        Int?
  student_price  Float
  external_price Float
  active         Boolean
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  Order          Order[]
  Batch          Batch?   @relation(fields: [batchId], references: [id], onDelete: Cascade)
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  ticketId  String
  status    OrderStatus
  payment   PaymentType
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  paymentId String      @unique
  batchId   Int
  ticket    Ticket      @relation(fields: [ticketId], references: [id])
  user      User        @relation(fields: [userId], references: [id])
}

enum PaymentType {
  PIX
  CREDIT_CARD
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELED
}
